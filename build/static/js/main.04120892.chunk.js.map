{"version":3,"sources":["components/Note.js","components/ShowNote.js","components/FormNote.js","services/notes/index.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","id","content","date","number","onClick","ShowNote","show","handlerClick","FormNote","newN","submitNotes","changeNotes","onSubmit","onChange","value","type","baseUrl","axios","get","then","response","data","catch","err","console","error","newObject","post","put","App","useState","notes","setNotes","newNotes","setNewNotes","load","setLoad","showAll","setShowAll","useEffect","log","noteService","length","notesToShow","filter","className","e","preventDefault","noteObject","Date","toISOString","Math","random","resp","concat","target","map","find","n","changedNote","returnedNote","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04120892.chunk.js","sourcesContent":["export const Note = ({ note, toggleImportance }) => {\n    const label = note.important ? \"Do make no important?\" : \"Do make important?\"\n\n  return (\n    <li>\n      {note.id}. {note.content}\n      <p>{note.date}</p>\n      <p>{note.number}</p>\n      <button onClick={toggleImportance}>\n        {label}\n      </button>\n    </li>\n  );\n};\n","export const ShowNote = ({ show, handlerClick }) => {\n    return (\n        <div>\n            <button onClick={handlerClick}>\n                show {show ? 'important' : 'all' }\n            </button>\n        </div>\n    )\n}","export const FormNote = ({ newN, submitNotes, changeNotes }) => {\n    return (\n        <form onSubmit={submitNotes} >\n            <input onChange={changeNotes} value={newN} />\n            <button type=\"submit\">save</button>\n        </form>\n    )\n}","import axios from \"axios\";\n\nconst baseUrl = '/api/notes'\n\nconst getPosts = () => {\n    return axios.get(baseUrl)\n        .then(response => {\n            const { data } = response\n            return data\n        })\n        .catch(err => console.error(err))\n} \n\nconst postData = (newObject) => {\n    return axios.post(baseUrl, newObject)\n        .then(response => {\n            const { data } = response\n            return data\n        })\n        .catch(err => console.error(err))\n}\n\nconst updateData = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject)\n        .then(response => {\n            const { data } = response\n            return data\n        })\n        .catch(err => console.error(err))\n}\n\nexport default { getPosts, postData, updateData }","import \"./App.css\";\n\nimport { Note } from \"./components/Note\";\nimport { ShowNote } from \"./components/ShowNote\"\nimport { FormNote } from \"./components/FormNote\";\n\nimport { useState, useEffect } from \"react\";\nimport noteService from \"./services/notes\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNotes, setNewNotes] = useState('')\n  const [load, setLoad] = useState(true)\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    console.log('effect')\n    const dataPosts = noteService.getPosts()\n    \n    const handlerEvent = data => {\n      console.log('promise fulfilled')\n      setLoad(false)\n      setNotes(data)\n    }\n\n    dataPosts.then(handlerEvent)\n  }, [])\n\n  console.log('render', notes.length, 'notes')\n\n  const handlerSubmitNotes = (e) => {\n    e.preventDefault();\n    const noteObject = {\n      content: newNotes,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    }\n\n    noteService.postData(noteObject).then((resp) => console.log(\"succesfuly\", resp))\n  \n    setNotes(notes.concat(noteObject))\n    setNewNotes('')\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note, important: !note.important}\n\n    setLoad(true)\n    \n    noteService.updateData(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n        setLoad(false)\n      })\n  } \n\n  const handlerChangeNotes = (e) => setNewNotes(e.target.value)\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n  \n  return (\n    <div className=\"App\">\n      <h1>Notes</h1>\n\n      <ShowNote show={showAll} handlerClick={() => setShowAll(!showAll)} />\n\n      <FormNote submitNotes={handlerSubmitNotes} changeNotes={handlerChangeNotes} newN={newNotes} />\n\n      { load ? 'Cargando...' : '' }\n\n      <ul>\n        {notesToShow.map(note => \n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />          \n        )}\n      </ul>\n\n    </div>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();"],"sourceRoot":""}